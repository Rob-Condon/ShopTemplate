{"remainingRequest":"E:\\InHouseWeb\\ShopTemplate\\node_modules\\babel-loader\\lib\\index.js!E:\\InHouseWeb\\ShopTemplate\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\InHouseWeb\\ShopTemplate\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\InHouseWeb\\ShopTemplate\\src\\components\\Create\\CreateGallery.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\InHouseWeb\\ShopTemplate\\src\\components\\Create\\CreateGallery.vue","mtime":1587878016775},{"path":"E:\\InHouseWeb\\ShopTemplate\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1587877987073},{"path":"E:\\InHouseWeb\\ShopTemplate\\node_modules\\babel-loader\\lib\\index.js","mtime":1587877986756},{"path":"E:\\InHouseWeb\\ShopTemplate\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1587877987073},{"path":"E:\\InHouseWeb\\ShopTemplate\\node_modules\\vue-loader\\lib\\index.js","mtime":1587878004863}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5jbHVkZXMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5tYXAiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5mdW5jdGlvbi5uYW1lIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLmluY2x1ZGVzIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiRTpcXEluSG91c2VXZWJcXFNob3BUZW1wbGF0ZVxcbm9kZV9tb2R1bGVzXFxAYmFiZWxcXHJ1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCBHYWxsZXJ5Q29udHJvbGxlciBmcm9tICdAL3NlcnZpY2VzL0Jsb2dTZXJ2aWNlcyc7IC8vIGltcG9ydCBKUXVlcnkgZnJvbSAnanF1ZXJ5JwovLyA8YnV0dG9uIGNsYXNzPSJnZXQtaHRtbCIgdi1vbjpjbGljaz0iZ2V0SFRNTCI+IFNhdmUgdG8gQmxvZ3NpdGUhIDwvYnV0dG9uPgoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdIZWxsb1dvcmxkJywKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgY29ycmVjdDogdHJ1ZSwKICAgICAgcGFzc3dvcmQ6ICIxMjM0IiwKICAgICAgVGl0bGU6ICcnLAogICAgICB0aHVtYm5haWw6ICcnLAogICAgICBibG9nczogdW5kZWZpbmVkLAogICAgICBDdXJyZW50R2FsbGVyeUlkOiAwLAogICAgICBkYXRhSW1hZ2VzOiBbXSwKICAgICAgVG90YWxQaWN0dXJlczogMSwKICAgICAgSW1hZ2VzU2hvd0Nhc2U6IFtdCiAgICB9OwogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHt9LAogIGJlZm9yZU1vdW50OiBmdW5jdGlvbiBiZWZvcmVNb3VudCgpIHsKICAgIHRoaXMuZ2V0QmxvZ3MoKTsKICB9LAogIG1ldGhvZHM6IHsKICAgIE1vcmVQaWN0dXJlczogZnVuY3Rpb24gTW9yZVBpY3R1cmVzKCkgewogICAgICB0aGlzLlRvdGFsUGljdHVyZXMgKz0gMTsKICAgIH0sCiAgICBnZXRCbG9nczogZnVuY3Rpb24gKCkgewogICAgICB2YXIgX2dldEJsb2dzID0gX2FzeW5jVG9HZW5lcmF0b3IoCiAgICAgIC8qI19fUFVSRV9fKi8KICAgICAgcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgICB2YXIgYmxvZ3M7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDA7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMzsKICAgICAgICAgICAgICAgIHJldHVybiBHYWxsZXJ5Q29udHJvbGxlci5nZXRBbGxHYWxsZXJ5KCk7CgogICAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICAgIGJsb2dzID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICAgIHRoaXMuYmxvZ3MgPSBibG9ncy5kYXRhLkdhbGxlcmllczsKCiAgICAgICAgICAgICAgICBpZiAodGhpcy5ibG9ncy5sZW5ndGggPT09IDApIHsKICAgICAgICAgICAgICAgICAgdGhpcy5DdXJyZW50R2FsbGVyeUlkID0gMTsKICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgIHRoaXMuQ3VycmVudEdhbGxlcnlJZCA9IHRoaXMuYmxvZ3MucmV2ZXJzZSgpWzBdLmlkICsgMTsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTI7CiAgICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgICAgY2FzZSA4OgogICAgICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDg7CiAgICAgICAgICAgICAgICBfY29udGV4dC50MCA9IF9jb250ZXh0WyJjYXRjaCJdKDApOwogICAgICAgICAgICAgICAgY29uc29sZS5sb2coX2NvbnRleHQudDApOwogICAgICAgICAgICAgICAgdGhpcy5teVVybCA9IF9jb250ZXh0LnQwOwoKICAgICAgICAgICAgICBjYXNlIDEyOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSwgdGhpcywgW1swLCA4XV0pOwogICAgICB9KSk7CgogICAgICBmdW5jdGlvbiBnZXRCbG9ncygpIHsKICAgICAgICByZXR1cm4gX2dldEJsb2dzLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICAgIH0KCiAgICAgIHJldHVybiBnZXRCbG9nczsKICAgIH0oKSwKICAgIHNlbmRIdG1sOiBmdW5jdGlvbiBzZW5kSHRtbCgpIHsKICAgICAgdGhpcy51c2VySW5wdXQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgndXNlcklucHV0JykudmFsdWU7CiAgICAgIHZhciBvdXRwdXRTZWN0aW9uID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ291dHB1dCcpOwogICAgICBvdXRwdXRTZWN0aW9uLmlubmVySFRNTCA9IHRoaXMudXNlcklucHV0OwogICAgfSwKICAgIG9uRmlsZUNoYW5nZTogZnVuY3Rpb24gKCkgewogICAgICB2YXIgX29uRmlsZUNoYW5nZSA9IF9hc3luY1RvR2VuZXJhdG9yKAogICAgICAvKiNfX1BVUkVfXyovCiAgICAgIHJlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUyKGUpIHsKICAgICAgICB2YXIgYmxvYkRhdGEsIHJlYWRGaWxlOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMiQoX2NvbnRleHQyKSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICByZWFkRmlsZSA9IGZ1bmN0aW9uIF9yZWYoZmlsZSwgb25sb2FkQ2FsbGJhY2spIHsKICAgICAgICAgICAgICAgICAgdmFyIHJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKCk7CiAgICAgICAgICAgICAgICAgIHJlYWRlci5vbmxvYWQgPSBvbmxvYWRDYWxsYmFjazsKICAgICAgICAgICAgICAgICAgcmVhZGVyLnJlYWRBc0RhdGFVUkwoZmlsZSk7CiAgICAgICAgICAgICAgICB9OwoKICAgICAgICAgICAgICAgIGJsb2JEYXRhID0gZS50YXJnZXQuZmlsZXNbMF07CiAgICAgICAgICAgICAgICBzZWxmLmRhdGEgPSAnJzsKICAgICAgICAgICAgICAgIHJlYWRGaWxlKGJsb2JEYXRhLCBmdW5jdGlvbiAoZSkgewogICAgICAgICAgICAgICAgICBzZWxmLmRhdGEgPSBlLnRhcmdldC5yZXN1bHQ7CiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUyKTsKICAgICAgfSkpOwoKICAgICAgZnVuY3Rpb24gb25GaWxlQ2hhbmdlKF94KSB7CiAgICAgICAgcmV0dXJuIF9vbkZpbGVDaGFuZ2UuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgICAgfQoKICAgICAgcmV0dXJuIG9uRmlsZUNoYW5nZTsKICAgIH0oKSwKICAgIG9uRmlsZUNoYW5nZUltYWdlczogZnVuY3Rpb24gKCkgewogICAgICB2YXIgX29uRmlsZUNoYW5nZUltYWdlcyA9IF9hc3luY1RvR2VuZXJhdG9yKAogICAgICAvKiNfX1BVUkVfXyovCiAgICAgIHJlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUzKGUpIHsKICAgICAgICB2YXIgYmxvYkRhdGEsIG5hbWVBcnJheSwgcmVhZGVyOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMyQoX2NvbnRleHQzKSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0My5wcmV2ID0gX2NvbnRleHQzLm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBibG9iRGF0YSA9IGUudGFyZ2V0LmZpbGVzWzBdOwogICAgICAgICAgICAgICAgbmFtZUFycmF5ID0gdGhpcy5kYXRhSW1hZ2VzLm1hcChmdW5jdGlvbiAoZWwpIHsKICAgICAgICAgICAgICAgICAgcmV0dXJuIGVsLm5hbWU7CiAgICAgICAgICAgICAgICB9KTsgLy8gQ2hlY2sgaWYgaW1hZ2UgZXhpc3RzIGFscmVhZHkKCiAgICAgICAgICAgICAgICBpZiAobmFtZUFycmF5LmluY2x1ZGVzKGJsb2JEYXRhLm5hbWUpKSB7Ly8gZG8gbm90aGluZwogICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgdGhpcy5kYXRhSW1hZ2VzLnB1c2goYmxvYkRhdGEpOwogICAgICAgICAgICAgICAgICByZWFkZXIgPSBuZXcgRmlsZVJlYWRlcigpOwogICAgICAgICAgICAgICAgICAvKi8vY29uc29sZS5sb2coYmxvYkRhdGEpOwogICAgICAgICAgICAgICAgICBhd2FpdCB0aGlzLkltYWdlc1Nob3dDYXNlLnB1c2gocmVhZGVyLm9ubG9hZCA9IGZ1bmN0aW9uKGUpIHsKICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGUudGFyZ2V0LnJlc3VsdCk7CiAgICAgICAgICAgICAgICAgICAgICAgLy9kb2N1bWVudC5nZXRFbGVtZW50QnlJZCgicHJldmlldyIpLnNyYz1lLnRhcmdldC5yZXN1bHQ7CiAgICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgicHJldmlldyIpLmhlaWdodD0xNTA7CiAgICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgicHJldmlldyIpLndpZHRoPTE1MDsKICAgICAgICAgICAgICAgICAgICAgIHJldHVybiAgZS50YXJnZXQucmVzdWx0OwogICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgICAgYXdhaXQgY29uc29sZS5sb2codGhpcy5JbWFnZXNTaG93Q2FzZSk7Ki8KCiAgICAgICAgICAgICAgICAgIHJlYWRlci5yZWFkQXNEYXRhVVJMKGJsb2JEYXRhKTsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICB0aGlzLk1vcmVQaWN0dXJlcygpOwoKICAgICAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDMuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTMsIHRoaXMpOwogICAgICB9KSk7CgogICAgICBmdW5jdGlvbiBvbkZpbGVDaGFuZ2VJbWFnZXMoX3gyKSB7CiAgICAgICAgcmV0dXJuIF9vbkZpbGVDaGFuZ2VJbWFnZXMuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgICAgfQoKICAgICAgcmV0dXJuIG9uRmlsZUNoYW5nZUltYWdlczsKICAgIH0oKSwKICAgIFJlYWRJbWFnZTogZnVuY3Rpb24gKCkgewogICAgICB2YXIgX1JlYWRJbWFnZSA9IF9hc3luY1RvR2VuZXJhdG9yKAogICAgICAvKiNfX1BVUkVfXyovCiAgICAgIHJlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWU0KGJsb2JEYXRhKSB7CiAgICAgICAgdmFyIHJlYWRGaWxlOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlNCQoX2NvbnRleHQ0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0NC5wcmV2ID0gX2NvbnRleHQ0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICByZWFkRmlsZSA9IGZ1bmN0aW9uIF9yZWYyKGZpbGUsIG9ubG9hZENhbGxiYWNrKSB7CiAgICAgICAgICAgICAgICAgIHZhciByZWFkZXIgPSBuZXcgRmlsZVJlYWRlcigpOwogICAgICAgICAgICAgICAgICByZWFkZXIub25sb2FkID0gb25sb2FkQ2FsbGJhY2s7CiAgICAgICAgICAgICAgICAgIHJlYWRlci5yZWFkQXNEYXRhVVJMKGZpbGUpOwogICAgICAgICAgICAgICAgfTsKCiAgICAgICAgICAgICAgICBzZWxmLkdhbGxlcnlJZCA9IHRoaXMuQ3VycmVudEdhbGxlcnlJZDsKICAgICAgICAgICAgICAgIHNlbGYuSW1hZ2VEYXRhID0gJyc7CiAgICAgICAgICAgICAgICByZWFkRmlsZShibG9iRGF0YSwgZnVuY3Rpb24gKGUpIHsKICAgICAgICAgICAgICAgICAgc2VsZi5JbWFnZURhdGEgPSBlLnRhcmdldC5yZXN1bHQ7CiAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdQdXNoaW5nIG5vdycpOwogICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhzZWxmLkdhbGxlcnlJZCk7CiAgICAgICAgICAgICAgICAgIEdhbGxlcnlDb250cm9sbGVyLmNyZWF0ZUltYWdlVGFibGUoewogICAgICAgICAgICAgICAgICAgIEdhbGxlcnlMaW5rOiBzZWxmLkdhbGxlcnlJZCwKICAgICAgICAgICAgICAgICAgICBJbWFnZTogZS50YXJnZXQucmVzdWx0CiAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0NC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlNCwgdGhpcyk7CiAgICAgIH0pKTsKCiAgICAgIGZ1bmN0aW9uIFJlYWRJbWFnZShfeDMpIHsKICAgICAgICByZXR1cm4gX1JlYWRJbWFnZS5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgICB9CgogICAgICByZXR1cm4gUmVhZEltYWdlOwogICAgfSgpLAogICAgZ2V0SFRNTDogZnVuY3Rpb24gKCkgewogICAgICB2YXIgX2dldEhUTUwgPSBfYXN5bmNUb0dlbmVyYXRvcigKICAgICAgLyojX19QVVJFX18qLwogICAgICByZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlNSgpIHsKICAgICAgICB2YXIgcmVzcG9uc2UsIGk7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWU1JChfY29udGV4dDUpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQ1LnByZXYgPSBfY29udGV4dDUubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIF9jb250ZXh0NS5wcmV2ID0gMDsKICAgICAgICAgICAgICAgIHRoaXMuVGl0bGUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnVGl0bGUnKS5pbm5lclRleHQ7CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygiUHVzaGluZyBHYWxsZXJ5Iik7CiAgICAgICAgICAgICAgICBfY29udGV4dDUubmV4dCA9IDU7CiAgICAgICAgICAgICAgICByZXR1cm4gR2FsbGVyeUNvbnRyb2xsZXIuY3JlYXRlR2FsbGVyeSh7CiAgICAgICAgICAgICAgICAgIFRpdGxlOiB0aGlzLlRpdGxlLAogICAgICAgICAgICAgICAgICBJbWFnZTogc2VsZi5kYXRhCiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICAgICAgcmVzcG9uc2UgPSBfY29udGV4dDUuc2VudDsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHJlc3BvbnNlLkRhdGUpOwogICAgICAgICAgICAgICAgaSA9IDA7CiAgICAgICAgICAgICAgICBpID0gMDsKCiAgICAgICAgICAgICAgY2FzZSA5OgogICAgICAgICAgICAgICAgaWYgKCEoaSA8IHRoaXMuZGF0YUltYWdlcy5sZW5ndGgpKSB7CiAgICAgICAgICAgICAgICAgIF9jb250ZXh0NS5uZXh0ID0gMTU7CiAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIF9jb250ZXh0NS5uZXh0ID0gMTI7CiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5SZWFkSW1hZ2UodGhpcy5kYXRhSW1hZ2VzW2ldKTsKCiAgICAgICAgICAgICAgY2FzZSAxMjoKICAgICAgICAgICAgICAgIGkrKzsKICAgICAgICAgICAgICAgIF9jb250ZXh0NS5uZXh0ID0gOTsKICAgICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgICBjYXNlIDE1OgogICAgICAgICAgICAgICAgYWxlcnQoIkdhbGxlcnkgaGFzIGJlZW4gYWRkZWQhIik7CiAgICAgICAgICAgICAgICBfY29udGV4dDUubmV4dCA9IDIyOwogICAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICAgIGNhc2UgMTg6CiAgICAgICAgICAgICAgICBfY29udGV4dDUucHJldiA9IDE4OwogICAgICAgICAgICAgICAgX2NvbnRleHQ1LnQwID0gX2NvbnRleHQ1WyJjYXRjaCJdKDApOwogICAgICAgICAgICAgICAgdGhpcy5lcnJvciA9IF9jb250ZXh0NS50MDsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHRoaXMuZXJyb3IpOwoKICAgICAgICAgICAgICBjYXNlIDIyOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ1LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWU1LCB0aGlzLCBbWzAsIDE4XV0pOwogICAgICB9KSk7CgogICAgICBmdW5jdGlvbiBnZXRIVE1MKCkgewogICAgICAgIHJldHVybiBfZ2V0SFRNTC5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgICB9CgogICAgICByZXR1cm4gZ2V0SFRNTDsKICAgIH0oKQogIH0KfTs="},{"version":3,"sources":["CreateGallery.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div class=\"wrapper\" style=\"padding: 20px;\">\r\n    <div >\r\n\r\n      <button style=\"padding: 1vw\" class=\"get-html\" v-on:click=\"getHTML\"> Save to Gallery! </button>\r\n\r\n          <br>\r\n          <div style=\"position: relative; width: 75%; margin-left: auto; margin-right: auto\">\r\n            <h1 style=\"margin-top: 5vw\"> Icon And Title</h1>\r\n             <div id=\"Title\" contenteditable=\"true\" style=\"margin-top: 10px;\"> TITLE (Click here) </div>\r\n              <form id=\"uploadbanner\" enctype=\"multipart/form-data\" style=\"margin-top: 10px;\">\r\n                <label>Thumbnail </label><input id=\"thumbnail\" ref=\"Thumbnail\" name=\"myfile\" type=\"file\" required @change=\"onFileChange\" accept=\"image/*\"/>\r\n              </form>\r\n\r\n            <h1 style=\"margin-top: 5vw\"> Adding images to the gallery</h1>\r\n            <div>\r\n              <form v-for=\"i in TotalPictures\" :key=\"i\" class=\"uploadbanner\" enctype=\"multipart/form-data\" style=\"margin-top: 10px;\">\r\n                <label>Image: </label>\r\n\r\n                  <input class=\"image\" ref=\"file\" name=\"myfile\" type=\"file\" required @change=\"onFileChangeImages\" accept=\"image/*\"/>\r\n              </form>\r\n<!--                need to convert image to blob file fck\r\n                <img v-for=\"image in ImagesShowCase\" :key=\"image\" class=\"preview\" v-bind:src=\"image\" alt=\"no\">\r\n                    <button id=\"MorePics\" v-on:click=\"MorePictures\">More Pictures!</button>  -->\r\n\r\n            </div>\r\n          </div>\r\n\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import GalleryController from '@/services/BlogServices'\r\n\r\n  // import JQuery from 'jquery'\r\n// <button class=\"get-html\" v-on:click=\"getHTML\"> Save to Blogsite! </button>\r\n\r\n  export default {\r\n    name: 'HelloWorld',\r\n      data() {\r\n      return {\r\n          correct: true,\r\n        password: \"1234\",\r\n        Title: '',\r\n        thumbnail:'',\r\n          blogs: undefined,\r\n          CurrentGalleryId: 0,\r\n          dataImages: [],\r\n          TotalPictures: 1,\r\n          ImagesShowCase: [],\r\n      }\r\n\r\n    },\r\n    mounted() {\r\n    },\r\n\r\n    beforeMount() {\r\n        this.getBlogs()\r\n    },\r\n    methods: {\r\n\r\n        MorePictures() {\r\n            this.TotalPictures += 1;\r\n        },\r\n\r\n        async getBlogs() {\r\n            try {\r\n                const blogs = await GalleryController.getAllGallery();\r\n\r\n                this.blogs = blogs.data.Galleries;\r\n                if(this.blogs.length  === 0) {\r\n                    this.CurrentGalleryId = 1;\r\n                } else {\r\n                    this.CurrentGalleryId = this.blogs.reverse()[0].id + 1;\r\n                }\r\n\r\n\r\n            } catch (e) {\r\n                console.log(e);\r\n                this.myUrl = e;\r\n            }\r\n        },\r\n\r\n      sendHtml: function () {\r\n        this.userInput = document.getElementById('userInput').value;\r\n        var outputSection = document.getElementById('output');\r\n        outputSection.innerHTML = this.userInput;\r\n      },\r\n\r\n\r\n      async onFileChange(e){\r\n\r\n        var blobData =  e.target.files[0];\r\n\r\n        function readFile(file, onloadCallback) {\r\n          var reader = new FileReader();\r\n          reader.onload = onloadCallback;\r\n          reader.readAsDataURL(file)\r\n        }\r\n        self.data = '';\r\n        readFile(blobData, function(e){\r\n          self.data = e.target.result;\r\n\r\n        });\r\n\r\n      },\r\n\r\n        async onFileChangeImages(e){\r\n\r\n\r\n\r\n              var blobData =  e.target.files[0];\r\n              var nameArray = this.dataImages.map(function(el) {return el.name;});\r\n\r\n              // Check if image exists already\r\n              if (nameArray.includes(blobData.name))\r\n              {\r\n                  // do nothing\r\n              } else\r\n              {\r\n                  this.dataImages.push(blobData);\r\n                  var reader = new FileReader();\r\n                  /*//console.log(blobData);\r\n                  await this.ImagesShowCase.push(reader.onload = function(e) {\r\n                      console.log(e.target.result);\r\n\r\n                      //document.getElementById(\"preview\").src=e.target.result;\r\n                      document.getElementById(\"preview\").height=150;\r\n                      document.getElementById(\"preview\").width=150;\r\n                      return  e.target.result;\r\n                  });\r\n                  await console.log(this.ImagesShowCase);*/\r\n\r\n                  reader.readAsDataURL(blobData);\r\n              }\r\n            this.MorePictures();\r\n\r\n\r\n\r\n        },\r\n        async ReadImage(blobData) {\r\n\r\n            function readFile(file, onloadCallback) {\r\n                var reader = new FileReader();\r\n                reader.onload = onloadCallback;\r\n                reader.readAsDataURL(file)\r\n            }\r\n            self.GalleryId = this.CurrentGalleryId;\r\n            self.ImageData = '';\r\n            readFile(blobData, function(e){\r\n                self.ImageData = e.target.result;\r\n                console.log('Pushing now');\r\n                console.log(self.GalleryId);\r\n                GalleryController.createImageTable({\r\n                    GalleryLink: self.GalleryId,\r\n                    Image: e.target.result\r\n                });\r\n            });\r\n        },\r\n\r\n      async getHTML() {\r\n        try {\r\n\r\n          this.Title = document.getElementById('Title').innerText;\r\n\r\n          console.log(\"Pushing Gallery\");\r\n          const response = await GalleryController.createGallery({\r\n            Title: this.Title,\r\n            Image: self.data\r\n          });\r\n            console.log(response.Date);\r\n          let i = 0;\r\n          for(i=0; i < this.dataImages.length; i++) {\r\n              await this.ReadImage(this.dataImages[i]);\r\n          }\r\n          alert(\"Gallery has been added!\");\r\n\r\n        } catch (err) {\r\n          this.error = err;\r\n          console.log(this.error)\r\n        }\r\n\r\n\r\n\r\n    }\r\n  },\r\n\r\n  }\r\n\r\n\r\n</script>\r\n\r\n\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped>\r\n\r\n  #userInput{\r\n    height: 500px;\r\n    width: 100%;\r\n  }\r\n  .command-bar {\r\n    width: 100%;\r\n    height: 100%;\r\n    position: relative;\r\n      float: left;\r\n      padding-top: 10px;\r\n      display: none;\r\n      /*animation: fade-in 0.5s;*/\r\n      background-color: #dadbe0;\r\n      border: 1px gray solid;\r\n      border-bottom: none;\r\n      border-top: none;\r\n  }\r\n  .command-bar button {\r\n      float: left;\r\n      padding: 5px;\r\n      margin-left: 5px;\r\n\r\n\r\n  }\r\n  #control-bar{\r\n    height: 200px;\r\n      padding-bottom: 2%;\r\n\r\n  }\r\n    #tabs {\r\n        /*background-color: #dadbe0;*/\r\n        /*border-top: 1px gray solid;*/\r\n        border-left: 1px gray solid ;\r\n        border-right: 1px gray solid;\r\n\r\n    }\r\n    #tabs button{\r\n        position: relative;\r\n        width: 10%;\r\n        float: left;\r\n        left:-1px;\r\n        border-top: 1px gray solid;\r\n        border-left: 1px gray solid;\r\n        border-right: 1px gray solid;\r\n        border-bottom: none;\r\n        /*background-color: #dadbe0;*/\r\n        border-radius: 20px 20px 0 0;\r\n    }\r\n    button:focus{\r\n        outline: none;\r\n    }\r\n\r\n    @keyframes fade-in {\r\n        from {\r\n            opacity: 0;\r\n        }\r\n        to {\r\n            opacity: 1;\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n  /* The Modal (background) */\r\n  .modal {\r\n      display: none; /* Hidden by default */\r\n      position: fixed; /* Stay in place */\r\n      z-index: 1; /* Sit on top */\r\n      padding-top: 100px; /* Location of the box */\r\n      left: 0;\r\n      top: 0;\r\n      width: 100%; /* Full width */\r\n      height: 100%; /* Full height */\r\n      overflow: auto; /* Enable scroll if needed */\r\n      background-color: rgb(0,0,0); /* Fallback color */\r\n      background-color: rgba(0,0,0,0.4); /* Black w/ opacity */\r\n  }\r\n\r\n  /* Modal Content */\r\n  .modal-content {\r\n      background-color: #fefefe;\r\n      margin: auto;\r\n      padding: 20px;\r\n      border: 1px solid #888;\r\n      width: 80%;\r\n      z-index: 1;\r\n    display: inline-block;\r\n  }\r\n\r\n  /* The Close Button */\r\n  .close {\r\n      color: #aaaaaa;\r\n      float: right;\r\n      font-size: 28px;\r\n      font-weight: bold;\r\n  }\r\n\r\n  .close:hover,\r\n  .close:focus {\r\n      color: #000;\r\n      text-decoration: none;\r\n      cursor: pointer;\r\n  }\r\n  #MorePics {\r\n    margin-top: 5vw;\r\n    padding: 0.5vw;\r\n  }\r\n</style>\r\n"],"sourceRoot":"src/components/Create"}]}