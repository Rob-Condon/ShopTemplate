{"remainingRequest":"C:\\Users\\Robert Condon\\Desktop\\In House Web\\Templates\\ShopTemplate\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Robert Condon\\Desktop\\In House Web\\Templates\\ShopTemplate\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Robert Condon\\Desktop\\In House Web\\Templates\\ShopTemplate\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Robert Condon\\Desktop\\In House Web\\Templates\\ShopTemplate\\src\\components\\Create\\CreateGallery.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Robert Condon\\Desktop\\In House Web\\Templates\\ShopTemplate\\src\\components\\Create\\CreateGallery.vue","mtime":1583880487931},{"path":"C:\\Users\\Robert Condon\\Desktop\\In House Web\\Templates\\ShopTemplate\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Robert Condon\\Desktop\\In House Web\\Templates\\ShopTemplate\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Robert Condon\\Desktop\\In House Web\\Templates\\ShopTemplate\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Robert Condon\\Desktop\\In House Web\\Templates\\ShopTemplate\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5jbHVkZXMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5tYXAiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5mdW5jdGlvbi5uYW1lIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLmluY2x1ZGVzIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiQzpcXFVzZXJzXFxSb2JlcnQgQ29uZG9uXFxEZXNrdG9wXFxJbiBIb3VzZSBXZWJcXFRlbXBsYXRlc1xcU2hvcFRlbXBsYXRlXFxub2RlX21vZHVsZXNcXEBiYWJlbFxccnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IEdhbGxlcnlDb250cm9sbGVyIGZyb20gJ0Avc2VydmljZXMvQmxvZ1NlcnZpY2VzJzsgLy8gaW1wb3J0IEpRdWVyeSBmcm9tICdqcXVlcnknCi8vIDxidXR0b24gY2xhc3M9ImdldC1odG1sIiB2LW9uOmNsaWNrPSJnZXRIVE1MIj4gU2F2ZSB0byBCbG9nc2l0ZSEgPC9idXR0b24+CgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ0hlbGxvV29ybGQnLAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBjb3JyZWN0OiB0cnVlLAogICAgICBwYXNzd29yZDogIjEyMzQiLAogICAgICBUaXRsZTogJycsCiAgICAgIHRodW1ibmFpbDogJycsCiAgICAgIGJsb2dzOiB1bmRlZmluZWQsCiAgICAgIEN1cnJlbnRHYWxsZXJ5SWQ6IDAsCiAgICAgIGRhdGFJbWFnZXM6IFtdLAogICAgICBUb3RhbFBpY3R1cmVzOiAxLAogICAgICBJbWFnZXNTaG93Q2FzZTogW10KICAgIH07CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkge30sCiAgYmVmb3JlTW91bnQ6IGZ1bmN0aW9uIGJlZm9yZU1vdW50KCkgewogICAgdGhpcy5nZXRCbG9ncygpOwogIH0sCiAgbWV0aG9kczogewogICAgTW9yZVBpY3R1cmVzOiBmdW5jdGlvbiBNb3JlUGljdHVyZXMoKSB7CiAgICAgIHRoaXMuVG90YWxQaWN0dXJlcyArPSAxOwogICAgfSwKICAgIGdldEJsb2dzOiBmdW5jdGlvbiAoKSB7CiAgICAgIHZhciBfZ2V0QmxvZ3MgPSBfYXN5bmNUb0dlbmVyYXRvcigKICAgICAgLyojX19QVVJFX18qLwogICAgICByZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICAgIHZhciBibG9nczsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gMDsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAzOwogICAgICAgICAgICAgICAgcmV0dXJuIEdhbGxlcnlDb250cm9sbGVyLmdldEFsbEdhbGxlcnkoKTsKCiAgICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgICAgYmxvZ3MgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgICAgdGhpcy5ibG9ncyA9IGJsb2dzLmRhdGEuR2FsbGVyaWVzOwoKICAgICAgICAgICAgICAgIGlmICh0aGlzLmJsb2dzLmxlbmd0aCA9PT0gMCkgewogICAgICAgICAgICAgICAgICB0aGlzLkN1cnJlbnRHYWxsZXJ5SWQgPSAxOwogICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgdGhpcy5DdXJyZW50R2FsbGVyeUlkID0gdGhpcy5ibG9ncy5yZXZlcnNlKClbMF0uaWQgKyAxOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAxMjsKICAgICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgICBjYXNlIDg6CiAgICAgICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gODsKICAgICAgICAgICAgICAgIF9jb250ZXh0LnQwID0gX2NvbnRleHRbImNhdGNoIl0oMCk7CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhfY29udGV4dC50MCk7CiAgICAgICAgICAgICAgICB0aGlzLm15VXJsID0gX2NvbnRleHQudDA7CgogICAgICAgICAgICAgIGNhc2UgMTI6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlLCB0aGlzLCBbWzAsIDhdXSk7CiAgICAgIH0pKTsKCiAgICAgIGZ1bmN0aW9uIGdldEJsb2dzKCkgewogICAgICAgIHJldHVybiBfZ2V0QmxvZ3MuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgICAgfQoKICAgICAgcmV0dXJuIGdldEJsb2dzOwogICAgfSgpLAogICAgc2VuZEh0bWw6IGZ1bmN0aW9uIHNlbmRIdG1sKCkgewogICAgICB0aGlzLnVzZXJJbnB1dCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd1c2VySW5wdXQnKS52YWx1ZTsKICAgICAgdmFyIG91dHB1dFNlY3Rpb24gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnb3V0cHV0Jyk7CiAgICAgIG91dHB1dFNlY3Rpb24uaW5uZXJIVE1MID0gdGhpcy51c2VySW5wdXQ7CiAgICB9LAogICAgb25GaWxlQ2hhbmdlOiBmdW5jdGlvbiAoKSB7CiAgICAgIHZhciBfb25GaWxlQ2hhbmdlID0gX2FzeW5jVG9HZW5lcmF0b3IoCiAgICAgIC8qI19fUFVSRV9fKi8KICAgICAgcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIoZSkgewogICAgICAgIHZhciBibG9iRGF0YSwgcmVhZEZpbGU7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyJChfY29udGV4dDIpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIHJlYWRGaWxlID0gZnVuY3Rpb24gX3JlZihmaWxlLCBvbmxvYWRDYWxsYmFjaykgewogICAgICAgICAgICAgICAgICB2YXIgcmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoKTsKICAgICAgICAgICAgICAgICAgcmVhZGVyLm9ubG9hZCA9IG9ubG9hZENhbGxiYWNrOwogICAgICAgICAgICAgICAgICByZWFkZXIucmVhZEFzRGF0YVVSTChmaWxlKTsKICAgICAgICAgICAgICAgIH07CgogICAgICAgICAgICAgICAgYmxvYkRhdGEgPSBlLnRhcmdldC5maWxlc1swXTsKICAgICAgICAgICAgICAgIHNlbGYuZGF0YSA9ICcnOwogICAgICAgICAgICAgICAgcmVhZEZpbGUoYmxvYkRhdGEsIGZ1bmN0aW9uIChlKSB7CiAgICAgICAgICAgICAgICAgIHNlbGYuZGF0YSA9IGUudGFyZ2V0LnJlc3VsdDsKICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTIpOwogICAgICB9KSk7CgogICAgICBmdW5jdGlvbiBvbkZpbGVDaGFuZ2UoX3gpIHsKICAgICAgICByZXR1cm4gX29uRmlsZUNoYW5nZS5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgICB9CgogICAgICByZXR1cm4gb25GaWxlQ2hhbmdlOwogICAgfSgpLAogICAgb25GaWxlQ2hhbmdlSW1hZ2VzOiBmdW5jdGlvbiAoKSB7CiAgICAgIHZhciBfb25GaWxlQ2hhbmdlSW1hZ2VzID0gX2FzeW5jVG9HZW5lcmF0b3IoCiAgICAgIC8qI19fUFVSRV9fKi8KICAgICAgcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTMoZSkgewogICAgICAgIHZhciBibG9iRGF0YSwgbmFtZUFycmF5LCByZWFkZXI7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUzJChfY29udGV4dDMpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQzLnByZXYgPSBfY29udGV4dDMubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIGJsb2JEYXRhID0gZS50YXJnZXQuZmlsZXNbMF07CiAgICAgICAgICAgICAgICBuYW1lQXJyYXkgPSB0aGlzLmRhdGFJbWFnZXMubWFwKGZ1bmN0aW9uIChlbCkgewogICAgICAgICAgICAgICAgICByZXR1cm4gZWwubmFtZTsKICAgICAgICAgICAgICAgIH0pOyAvLyBDaGVjayBpZiBpbWFnZSBleGlzdHMgYWxyZWFkeQoKICAgICAgICAgICAgICAgIGlmIChuYW1lQXJyYXkuaW5jbHVkZXMoYmxvYkRhdGEubmFtZSkpIHsvLyBkbyBub3RoaW5nCiAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICB0aGlzLmRhdGFJbWFnZXMucHVzaChibG9iRGF0YSk7CiAgICAgICAgICAgICAgICAgIHJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKCk7CiAgICAgICAgICAgICAgICAgIC8qLy9jb25zb2xlLmxvZyhibG9iRGF0YSk7CiAgICAgICAgICAgICAgICAgIGF3YWl0IHRoaXMuSW1hZ2VzU2hvd0Nhc2UucHVzaChyZWFkZXIub25sb2FkID0gZnVuY3Rpb24oZSkgewogICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coZS50YXJnZXQucmVzdWx0KTsKICAgICAgICAgICAgICAgICAgICAgICAvL2RvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJwcmV2aWV3Iikuc3JjPWUudGFyZ2V0LnJlc3VsdDsKICAgICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJwcmV2aWV3IikuaGVpZ2h0PTE1MDsKICAgICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJwcmV2aWV3Iikud2lkdGg9MTUwOwogICAgICAgICAgICAgICAgICAgICAgcmV0dXJuICBlLnRhcmdldC5yZXN1bHQ7CiAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgICBhd2FpdCBjb25zb2xlLmxvZyh0aGlzLkltYWdlc1Nob3dDYXNlKTsqLwoKICAgICAgICAgICAgICAgICAgcmVhZGVyLnJlYWRBc0RhdGFVUkwoYmxvYkRhdGEpOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIHRoaXMuTW9yZVBpY3R1cmVzKCk7CgogICAgICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMywgdGhpcyk7CiAgICAgIH0pKTsKCiAgICAgIGZ1bmN0aW9uIG9uRmlsZUNoYW5nZUltYWdlcyhfeDIpIHsKICAgICAgICByZXR1cm4gX29uRmlsZUNoYW5nZUltYWdlcy5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgICB9CgogICAgICByZXR1cm4gb25GaWxlQ2hhbmdlSW1hZ2VzOwogICAgfSgpLAogICAgUmVhZEltYWdlOiBmdW5jdGlvbiAoKSB7CiAgICAgIHZhciBfUmVhZEltYWdlID0gX2FzeW5jVG9HZW5lcmF0b3IoCiAgICAgIC8qI19fUFVSRV9fKi8KICAgICAgcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTQoYmxvYkRhdGEpIHsKICAgICAgICB2YXIgcmVhZEZpbGU7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWU0JChfY29udGV4dDQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQ0LnByZXYgPSBfY29udGV4dDQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIHJlYWRGaWxlID0gZnVuY3Rpb24gX3JlZjIoZmlsZSwgb25sb2FkQ2FsbGJhY2spIHsKICAgICAgICAgICAgICAgICAgdmFyIHJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKCk7CiAgICAgICAgICAgICAgICAgIHJlYWRlci5vbmxvYWQgPSBvbmxvYWRDYWxsYmFjazsKICAgICAgICAgICAgICAgICAgcmVhZGVyLnJlYWRBc0RhdGFVUkwoZmlsZSk7CiAgICAgICAgICAgICAgICB9OwoKICAgICAgICAgICAgICAgIHNlbGYuR2FsbGVyeUlkID0gdGhpcy5DdXJyZW50R2FsbGVyeUlkOwogICAgICAgICAgICAgICAgc2VsZi5JbWFnZURhdGEgPSAnJzsKICAgICAgICAgICAgICAgIHJlYWRGaWxlKGJsb2JEYXRhLCBmdW5jdGlvbiAoZSkgewogICAgICAgICAgICAgICAgICBzZWxmLkltYWdlRGF0YSA9IGUudGFyZ2V0LnJlc3VsdDsKICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ1B1c2hpbmcgbm93Jyk7CiAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHNlbGYuR2FsbGVyeUlkKTsKICAgICAgICAgICAgICAgICAgR2FsbGVyeUNvbnRyb2xsZXIuY3JlYXRlSW1hZ2VUYWJsZSh7CiAgICAgICAgICAgICAgICAgICAgR2FsbGVyeUxpbms6IHNlbGYuR2FsbGVyeUlkLAogICAgICAgICAgICAgICAgICAgIEltYWdlOiBlLnRhcmdldC5yZXN1bHQKICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWU0LCB0aGlzKTsKICAgICAgfSkpOwoKICAgICAgZnVuY3Rpb24gUmVhZEltYWdlKF94MykgewogICAgICAgIHJldHVybiBfUmVhZEltYWdlLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICAgIH0KCiAgICAgIHJldHVybiBSZWFkSW1hZ2U7CiAgICB9KCksCiAgICBnZXRIVE1MOiBmdW5jdGlvbiAoKSB7CiAgICAgIHZhciBfZ2V0SFRNTCA9IF9hc3luY1RvR2VuZXJhdG9yKAogICAgICAvKiNfX1BVUkVfXyovCiAgICAgIHJlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWU1KCkgewogICAgICAgIHZhciByZXNwb25zZSwgaTsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTUkKF9jb250ZXh0NSkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDUucHJldiA9IF9jb250ZXh0NS5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX2NvbnRleHQ1LnByZXYgPSAwOwogICAgICAgICAgICAgICAgdGhpcy5UaXRsZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdUaXRsZScpLmlubmVyVGV4dDsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCJQdXNoaW5nIEdhbGxlcnkiKTsKICAgICAgICAgICAgICAgIF9jb250ZXh0NS5uZXh0ID0gNTsKICAgICAgICAgICAgICAgIHJldHVybiBHYWxsZXJ5Q29udHJvbGxlci5jcmVhdGVHYWxsZXJ5KHsKICAgICAgICAgICAgICAgICAgVGl0bGU6IHRoaXMuVGl0bGUsCiAgICAgICAgICAgICAgICAgIEltYWdlOiBzZWxmLmRhdGEKICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgICAgICByZXNwb25zZSA9IF9jb250ZXh0NS5zZW50OwogICAgICAgICAgICAgICAgY29uc29sZS5sb2cocmVzcG9uc2UuRGF0ZSk7CiAgICAgICAgICAgICAgICBpID0gMDsKICAgICAgICAgICAgICAgIGkgPSAwOwoKICAgICAgICAgICAgICBjYXNlIDk6CiAgICAgICAgICAgICAgICBpZiAoIShpIDwgdGhpcy5kYXRhSW1hZ2VzLmxlbmd0aCkpIHsKICAgICAgICAgICAgICAgICAgX2NvbnRleHQ1Lm5leHQgPSAxNTsKICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgX2NvbnRleHQ1Lm5leHQgPSAxMjsKICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLlJlYWRJbWFnZSh0aGlzLmRhdGFJbWFnZXNbaV0pOwoKICAgICAgICAgICAgICBjYXNlIDEyOgogICAgICAgICAgICAgICAgaSsrOwogICAgICAgICAgICAgICAgX2NvbnRleHQ1Lm5leHQgPSA5OwogICAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICAgIGNhc2UgMTU6CiAgICAgICAgICAgICAgICBhbGVydCgiR2FsbGVyeSBoYXMgYmVlbiBhZGRlZCEiKTsKICAgICAgICAgICAgICAgIF9jb250ZXh0NS5uZXh0ID0gMjI7CiAgICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgICAgY2FzZSAxODoKICAgICAgICAgICAgICAgIF9jb250ZXh0NS5wcmV2ID0gMTg7CiAgICAgICAgICAgICAgICBfY29udGV4dDUudDAgPSBfY29udGV4dDVbImNhdGNoIl0oMCk7CiAgICAgICAgICAgICAgICB0aGlzLmVycm9yID0gX2NvbnRleHQ1LnQwOwogICAgICAgICAgICAgICAgY29uc29sZS5sb2codGhpcy5lcnJvcik7CgogICAgICAgICAgICAgIGNhc2UgMjI6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDUuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTUsIHRoaXMsIFtbMCwgMThdXSk7CiAgICAgIH0pKTsKCiAgICAgIGZ1bmN0aW9uIGdldEhUTUwoKSB7CiAgICAgICAgcmV0dXJuIF9nZXRIVE1MLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICAgIH0KCiAgICAgIHJldHVybiBnZXRIVE1MOwogICAgfSgpCiAgfQp9Ow=="},{"version":3,"sources":["CreateGallery.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div class=\"wrapper\" style=\"padding: 20px;\">\r\n    <div >\r\n\r\n      <button style=\"padding: 1vw\" class=\"get-html\" v-on:click=\"getHTML\"> Save to Gallery! </button>\r\n\r\n          <br>\r\n          <div style=\"position: relative; width: 75%; margin-left: auto; margin-right: auto\">\r\n            <h1 style=\"margin-top: 5vw\"> Icon And Title</h1>\r\n             <div id=\"Title\" contenteditable=\"true\" style=\"margin-top: 10px;\"> TITLE (Click here) </div>\r\n              <form id=\"uploadbanner\" enctype=\"multipart/form-data\" style=\"margin-top: 10px;\">\r\n                <label>Thumbnail </label><input id=\"thumbnail\" ref=\"Thumbnail\" name=\"myfile\" type=\"file\" required @change=\"onFileChange\" accept=\"image/*\"/>\r\n              </form>\r\n\r\n            <h1 style=\"margin-top: 5vw\"> Adding images to the gallery</h1>\r\n            <div>\r\n              <form v-for=\"i in TotalPictures\" :key=\"i\" class=\"uploadbanner\" enctype=\"multipart/form-data\" style=\"margin-top: 10px;\">\r\n                <label>Image: </label>\r\n\r\n                  <input class=\"image\" ref=\"file\" name=\"myfile\" type=\"file\" required @change=\"onFileChangeImages\" accept=\"image/*\"/>\r\n              </form>\r\n<!--                need to convert image to blob file fck\r\n                <img v-for=\"image in ImagesShowCase\" :key=\"image\" class=\"preview\" v-bind:src=\"image\" alt=\"no\">\r\n                    <button id=\"MorePics\" v-on:click=\"MorePictures\">More Pictures!</button>  -->\r\n\r\n            </div>\r\n          </div>\r\n\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import GalleryController from '@/services/BlogServices'\r\n\r\n  // import JQuery from 'jquery'\r\n// <button class=\"get-html\" v-on:click=\"getHTML\"> Save to Blogsite! </button>\r\n\r\n  export default {\r\n    name: 'HelloWorld',\r\n      data() {\r\n      return {\r\n          correct: true,\r\n        password: \"1234\",\r\n        Title: '',\r\n        thumbnail:'',\r\n          blogs: undefined,\r\n          CurrentGalleryId: 0,\r\n          dataImages: [],\r\n          TotalPictures: 1,\r\n          ImagesShowCase: [],\r\n      }\r\n\r\n    },\r\n    mounted() {\r\n    },\r\n\r\n    beforeMount() {\r\n        this.getBlogs()\r\n    },\r\n    methods: {\r\n\r\n        MorePictures() {\r\n            this.TotalPictures += 1;\r\n        },\r\n\r\n        async getBlogs() {\r\n            try {\r\n                const blogs = await GalleryController.getAllGallery();\r\n\r\n                this.blogs = blogs.data.Galleries;\r\n                if(this.blogs.length  === 0) {\r\n                    this.CurrentGalleryId = 1;\r\n                } else {\r\n                    this.CurrentGalleryId = this.blogs.reverse()[0].id + 1;\r\n                }\r\n\r\n\r\n            } catch (e) {\r\n                console.log(e);\r\n                this.myUrl = e;\r\n            }\r\n        },\r\n\r\n      sendHtml: function () {\r\n        this.userInput = document.getElementById('userInput').value;\r\n        var outputSection = document.getElementById('output');\r\n        outputSection.innerHTML = this.userInput;\r\n      },\r\n\r\n\r\n      async onFileChange(e){\r\n\r\n        var blobData =  e.target.files[0];\r\n\r\n        function readFile(file, onloadCallback) {\r\n          var reader = new FileReader();\r\n          reader.onload = onloadCallback;\r\n          reader.readAsDataURL(file)\r\n        }\r\n        self.data = '';\r\n        readFile(blobData, function(e){\r\n          self.data = e.target.result;\r\n\r\n        });\r\n\r\n      },\r\n\r\n        async onFileChangeImages(e){\r\n\r\n\r\n\r\n              var blobData =  e.target.files[0];\r\n              var nameArray = this.dataImages.map(function(el) {return el.name;});\r\n\r\n              // Check if image exists already\r\n              if (nameArray.includes(blobData.name))\r\n              {\r\n                  // do nothing\r\n              } else\r\n              {\r\n                  this.dataImages.push(blobData);\r\n                  var reader = new FileReader();\r\n                  /*//console.log(blobData);\r\n                  await this.ImagesShowCase.push(reader.onload = function(e) {\r\n                      console.log(e.target.result);\r\n\r\n                      //document.getElementById(\"preview\").src=e.target.result;\r\n                      document.getElementById(\"preview\").height=150;\r\n                      document.getElementById(\"preview\").width=150;\r\n                      return  e.target.result;\r\n                  });\r\n                  await console.log(this.ImagesShowCase);*/\r\n\r\n                  reader.readAsDataURL(blobData);\r\n              }\r\n            this.MorePictures();\r\n\r\n\r\n\r\n        },\r\n        async ReadImage(blobData) {\r\n\r\n            function readFile(file, onloadCallback) {\r\n                var reader = new FileReader();\r\n                reader.onload = onloadCallback;\r\n                reader.readAsDataURL(file)\r\n            }\r\n            self.GalleryId = this.CurrentGalleryId;\r\n            self.ImageData = '';\r\n            readFile(blobData, function(e){\r\n                self.ImageData = e.target.result;\r\n                console.log('Pushing now');\r\n                console.log(self.GalleryId);\r\n                GalleryController.createImageTable({\r\n                    GalleryLink: self.GalleryId,\r\n                    Image: e.target.result\r\n                });\r\n            });\r\n        },\r\n\r\n      async getHTML() {\r\n        try {\r\n\r\n          this.Title = document.getElementById('Title').innerText;\r\n\r\n          console.log(\"Pushing Gallery\");\r\n          const response = await GalleryController.createGallery({\r\n            Title: this.Title,\r\n            Image: self.data\r\n          });\r\n            console.log(response.Date);\r\n          let i = 0;\r\n          for(i=0; i < this.dataImages.length; i++) {\r\n              await this.ReadImage(this.dataImages[i]);\r\n          }\r\n          alert(\"Gallery has been added!\");\r\n\r\n        } catch (err) {\r\n          this.error = err;\r\n          console.log(this.error)\r\n        }\r\n\r\n\r\n\r\n    }\r\n  },\r\n\r\n  }\r\n\r\n\r\n</script>\r\n\r\n\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped>\r\n\r\n  #userInput{\r\n    height: 500px;\r\n    width: 100%;\r\n  }\r\n  .command-bar {\r\n    width: 100%;\r\n    height: 100%;\r\n    position: relative;\r\n      float: left;\r\n      padding-top: 10px;\r\n      display: none;\r\n      /*animation: fade-in 0.5s;*/\r\n      background-color: #dadbe0;\r\n      border: 1px gray solid;\r\n      border-bottom: none;\r\n      border-top: none;\r\n  }\r\n  .command-bar button {\r\n      float: left;\r\n      padding: 5px;\r\n      margin-left: 5px;\r\n\r\n\r\n  }\r\n  #control-bar{\r\n    height: 200px;\r\n      padding-bottom: 2%;\r\n\r\n  }\r\n    #tabs {\r\n        /*background-color: #dadbe0;*/\r\n        /*border-top: 1px gray solid;*/\r\n        border-left: 1px gray solid ;\r\n        border-right: 1px gray solid;\r\n\r\n    }\r\n    #tabs button{\r\n        position: relative;\r\n        width: 10%;\r\n        float: left;\r\n        left:-1px;\r\n        border-top: 1px gray solid;\r\n        border-left: 1px gray solid;\r\n        border-right: 1px gray solid;\r\n        border-bottom: none;\r\n        /*background-color: #dadbe0;*/\r\n        border-radius: 20px 20px 0 0;\r\n    }\r\n    button:focus{\r\n        outline: none;\r\n    }\r\n\r\n    @keyframes fade-in {\r\n        from {\r\n            opacity: 0;\r\n        }\r\n        to {\r\n            opacity: 1;\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n  /* The Modal (background) */\r\n  .modal {\r\n      display: none; /* Hidden by default */\r\n      position: fixed; /* Stay in place */\r\n      z-index: 1; /* Sit on top */\r\n      padding-top: 100px; /* Location of the box */\r\n      left: 0;\r\n      top: 0;\r\n      width: 100%; /* Full width */\r\n      height: 100%; /* Full height */\r\n      overflow: auto; /* Enable scroll if needed */\r\n      background-color: rgb(0,0,0); /* Fallback color */\r\n      background-color: rgba(0,0,0,0.4); /* Black w/ opacity */\r\n  }\r\n\r\n  /* Modal Content */\r\n  .modal-content {\r\n      background-color: #fefefe;\r\n      margin: auto;\r\n      padding: 20px;\r\n      border: 1px solid #888;\r\n      width: 80%;\r\n      z-index: 1;\r\n    display: inline-block;\r\n  }\r\n\r\n  /* The Close Button */\r\n  .close {\r\n      color: #aaaaaa;\r\n      float: right;\r\n      font-size: 28px;\r\n      font-weight: bold;\r\n  }\r\n\r\n  .close:hover,\r\n  .close:focus {\r\n      color: #000;\r\n      text-decoration: none;\r\n      cursor: pointer;\r\n  }\r\n  #MorePics {\r\n    margin-top: 5vw;\r\n    padding: 0.5vw;\r\n  }\r\n</style>\r\n"],"sourceRoot":"src/components/Create"}]}