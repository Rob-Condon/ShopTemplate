{"remainingRequest":"C:\\Users\\Robert Condon\\Desktop\\In House Web\\Templates\\ShopTemplate\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Robert Condon\\Desktop\\In House Web\\Templates\\ShopTemplate\\src\\components\\MenuPage\\CreateMenu.vue?vue&type=style&index=0&id=fe46ae88&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\Robert Condon\\Desktop\\In House Web\\Templates\\ShopTemplate\\src\\components\\MenuPage\\CreateMenu.vue","mtime":1587900538441},{"path":"C:\\Users\\Robert Condon\\Desktop\\In House Web\\Templates\\ShopTemplate\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Robert Condon\\Desktop\\In House Web\\Templates\\ShopTemplate\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\Robert Condon\\Desktop\\In House Web\\Templates\\ShopTemplate\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\Robert Condon\\Desktop\\In House Web\\Templates\\ShopTemplate\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Robert Condon\\Desktop\\In House Web\\Templates\\ShopTemplate\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KI1J1bGVUaXRsZSB7DQogIGZvbnQtZmFtaWx5OiAnT3N3YWxkJywgc2Fucy1zZXJpZjsNCiAgZm9udC1zaXplOiAzdnc7DQogIGZvbnQtd2VpZ2h0OiAyMDA7DQp9DQogIC5SdWxlIHsNCiAgICB0ZXh0LWFsaWduOiBsZWZ0Ow0KICAgIHdpZHRoOiBhdXRvOw0KICAgIG1hcmdpbjogMC41dnc7DQogIH0NCiAgI1J1bGVIb2xkZXIgew0KICAgIGZvbnQtZmFtaWx5OiAnT3N3YWxkJywgc2Fucy1zZXJpZjsNCiAgICBmb250LXNpemU6IDEuMnZ3Ow0KICAgIGZvbnQtd2VpZ2h0OiAyMDA7DQogICAgZGlzcGxheTogaW5saW5lLWJsb2NrOw0KICAgIG1hcmdpbjogM3Z3Ow0KICB9DQo="},{"version":3,"sources":["CreateMenu.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"CreateMenu.vue","sourceRoot":"src/components/MenuPage","sourcesContent":["<template>\r\n  <div>\r\n    <div id=\"RuleTitle\"> We allow for you to edit the menu yourself! </div>\r\n    <div id=\"RuleHolder\">\r\n      <div class=\"Rule\">- Easy to remove or add new menu items!</div>\r\n      <div class=\"Rule\">- Only the owner can change the menu</div>\r\n      <div class=\"Rule\">- Separate items with \",\"</div>\r\n      <div class=\"Rule\">- To make a section use, \"-\" before the section title</div>\r\n      <div class=\"Rule\">- Text entered into the box below is previewed in the menu above. Play around with it to see the change!</div>\r\n    </div>\r\n    <div id=\"InputZone\">\r\n      <label for=\"MenuInput\"></label><textarea id=\"MenuInput\" rows=\"8\" cols=\"50\">\r\n    </textarea>\r\n    </div>\r\n    <button v-on:click=\"getMenuInput\">Change</button>\r\n\r\n\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\n    import {EventBus} from \"../../App\";\r\n    export default {\r\n        name: \"CreateMenu\",\r\n        data() {\r\n\r\n            return {\r\n                MenuItems: [\r\n                    {\r\n                        SectionTitle: \"Example Section\",\r\n                        id: 0,\r\n                        SectionItems: [ {\r\n                            id: -1,\r\n                            Ordered: 0,\r\n                            title: \"Example Item\",\r\n                            price: 99.99,\r\n                        }]\r\n                    },\r\n\r\n                ],\r\n                startedOnce: false,\r\n                StartingString: \"-Fish and chips,\\n\" +\r\n                    \"      \\n\" +\r\n                    \"      Fish:3.50,\\n\" +\r\n                    \"      Chips:2.60,\\n\" +\r\n                    \"      Hot Dog:1.50,\\n\" +\r\n                    \"\\n\" +\r\n                    \"-Chinese,\\n\" +\r\n                    \"      BBQ chicken: 12.50,\\n\" +\r\n                    \"      Lemon Chicken: 14.00,\\n\" +\r\n                    \"      Sweet and sour pork: 15.00\"\r\n            }\r\n        },\r\n        beforeMount() {\r\n            document.getElementById(\"MenuInput\").value = this.StartingString;\r\n            this.getMenuInput();\r\n\r\n        },\r\n        mounted() {\r\n            if(this.startedOnce === false) {\r\n                document.getElementById(\"MenuInput\").value = this.StartingString;\r\n                this.getMenuInput();\r\n                this.startedOnce = true;\r\n            }\r\n\r\n        },\r\n        methods: {\r\n            writeFile() {\r\n                //Implement once some one wants the offer\r\n                const fs = require('fs');\r\n\r\n                fs.writeFile(\"/tmp/test\", document.getElementById(\"MenuInput\").value, function(err) {\r\n                    if(err) {\r\n                        return console.log(err);\r\n                    }\r\n                    console.log(\"The file was saved!\");\r\n                });\r\n            },\r\n\r\n             getMenuInput() {\r\n                let menuString = [];\r\n                let ItemChunk = {};\r\n                let SectionChunk = {};\r\n                let allItems = [];\r\n                this.MenuItems = [];\r\n                let id = 0;\r\n                let SectionId = 0;\r\n                let sectionString =[];\r\n                sectionString = document.getElementById(\"MenuInput\").value.split(\"-\");\r\n                //menuString = document.getElementById(\"MenuInput\").value.split(\",\");\r\n                //console.log(menuString);\r\n                 for(let i=1; i < sectionString.length; i++) {\r\n                     SectionChunk = [];\r\n                     //console.log(\"Secotion string\");\r\n                     //console.log(sectionString);\r\n                     menuString = sectionString[i].split(\",\");\r\n                     //console.log(\"Menu string on split\");\r\n                     //console.log(menuString);\r\n                     SectionChunk.SectionTitle = menuString[0];\r\n                     SectionChunk.id = SectionId;\r\n                     SectionChunk.SectionItems = [];\r\n                     menuString = menuString.slice(1);\r\n                     //console.log(\"Meu string on slice\");\r\n                     //console.log(menuString);\r\n                     SectionId += 1;\r\n                     for(let i=0; i < menuString.length; i++) {\r\n                         ItemChunk = [];\r\n                         ItemChunk.id = id;\r\n                         let ItemSplit = menuString[i].replace(\"\\n\", \"\").split(\":\");\r\n                         //console.log(\"Item split\");\r\n                         //console.log(ItemSplit);\r\n                         if(ItemSplit[0] !== \"\" && ItemSplit[0] !== \"\\n\" &&\r\n                             ItemSplit[1] !== \"\" && ItemSplit[1] !== null) {\r\n                             ItemChunk.title = ItemSplit[0];\r\n                             ItemChunk.price = ItemSplit[1];\r\n                             ItemChunk.Ordered = 0;\r\n                             SectionChunk.SectionItems.push(ItemChunk);\r\n                             allItems += ItemChunk;\r\n                             id += 1;\r\n                         }\r\n\r\n                     }\r\n                     //console.log(SectionChunk);\r\n                     this.MenuItems.push(SectionChunk);\r\n                 }\r\n\r\n\r\n                 EventBus.$emit('Changed', this.MenuItems);\r\n                return allItems;\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n#RuleTitle {\r\n  font-family: 'Oswald', sans-serif;\r\n  font-size: 3vw;\r\n  font-weight: 200;\r\n}\r\n  .Rule {\r\n    text-align: left;\r\n    width: auto;\r\n    margin: 0.5vw;\r\n  }\r\n  #RuleHolder {\r\n    font-family: 'Oswald', sans-serif;\r\n    font-size: 1.2vw;\r\n    font-weight: 200;\r\n    display: inline-block;\r\n    margin: 3vw;\r\n  }\r\n</style>"]}]}